// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        

model Users{
  id String @id @default(uuid()) @db.Uuid
  email String  @unique
  phone String  ?@unique
  
  fullName String ?
  fcm_token String ?
  avatar String?
  property Property[]
  role user_role @default(USER)
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()

}   

model Property{
  id String @id @default(uuid()) @db.Uuid
  title String 
  summary String?
  address Address?
  userId String @db.Uuid
  user Users @relation(fields: [userId],references: [id],onDelete: Cascade)
  images String[] 
  price Int
  basic_info info ?
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()
  
  



  
}

enum property_type{
  FAMILY
  BACHELOR
  OFFICE
  SUBLET
  HOSTEL
  SHOP
}

model info{
  id String @id @default(uuid()) @db.Uuid
  bedroom Int 
  bathroom Int
  area Int ?
  available DateTime?
  floor_no Int?
  category property_type
  gender gender
  propertyId String @db.Uuid @unique
  property Property @relation(fields: [propertyId],references: [id])
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()
}
model Address{
  id String @id @default(uuid()) @db.Uuid
  division String
  district String
  upzila String
  map String ?

  propertyId String @db.Uuid @unique
  property Property @relation(fields: [propertyId],references: [id],onDelete: SetDefault)
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()


 
}

enum gender{
  MALE
  FEMALE
}

enum user_role {
  ADMIN
  USER
}

